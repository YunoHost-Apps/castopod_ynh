#!/bin/bash

source _common.sh
source /usr/share/yunohost/helpers

ynh_app_setting_set_default --key=php_upload_max_filesize --value=512M

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression "Ensuring downward compatibility..."

# If fpm_footprint doesn't exist, create it
if [ -z "${fpm_footprint:-}" ]; then
    fpm_footprint=low
#REMOVEME? Everything about fpm_footprint is removed in helpers2.1... |     ynh_app_setting_set --key=fpm_footprint --value=$fpm_footprint
fi

# If fpm_free_footprint doesn't exist, create it
if [ -z "${fpm_free_footprint:-}" ]; then
    fpm_free_footprint=0
#REMOVEME? Everything about fpm_free_footprint is removed in helpers2.1... |     ynh_app_setting_set --key=fpm_free_footprint --value=$fpm_free_footprint
fi

# If fpm_usage doesn't exist, create it
if [ -z "${fpm_usage:-}" ]; then
    fpm_usage=low
#REMOVEME? Everything about fpm_usage is removed in helpers2.1... |     ynh_app_setting_set --key=fpm_usage --value=$fpm_usage
fi

# If redis_db doesn't exist, create it
if [ -z "${redis_db:-}" ]; then
    # Configure redis
    redis_db=$(ynh_redis_get_free_db)
    ynh_app_setting_set --key=redis_db --value="$redis_db"
fi

#=================================================
# MOVE DATA TO __DATA_DIR__
#=================================================

if ynh_app_upgrading_from_version_before_or_equal_to 1.1.2~ynh2; then
    ynh_script_progression "Moving data..."
    mkdir -p $data_dir/media
    cp -rf $install_dir/public/media/* $data_dir/media
    chmod -R 750 $data_dir
    chown -R $app:www-data $data_dir

    ynh_safe_rm "$install_dir/public/media"

    ynh_script_progression "Fixing migrations..."
    # this will fail is `cp-install` was not run on prev version - just ignore, DB schema is (re)generated later.
    ynh_psql_db_shell  <<< "UPDATE cp_migrations SET class='Media\\\\Database\\\\Migrations\\\\AddMedia', namespace='Media' where class='App\\\\Database\\\\Migrations\\\\AddMedia'" || true
elif ynh_app_upgrading_from_version_before 1.6.5~ynh2; then
    chown -R $app:www-data $data_dir
fi

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

# 1.7.1~ynh2 accidently shipped 1.6.5, force upgrade on that version even if it's theoretically the same upstream release

# FIXME: this is still supported but the recommendation is now to *always* re-setup the app sources wether or not the upstream sources changed
if ynh_app_upstream_version_changed || ynh_compare_current_package_version --comparison eq --version "1.7.1~ynh2"
then
	ynh_script_progression "Upgrading source files..."

	# Download, check integrity, uncompress and patch the source from app.src
	ynh_setup_source --dest_dir="$install_dir" --full_replace
fi

#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod -R o-rwx "$install_dir"
#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown -R $app:www-data "$install_dir"
#=================================================
# RECONFIGURE THE APP (UPDATE CONF, APPLY MIGRATIONS...)
#=================================================
# UPDATE A CONFIG FILE
#=================================================
ynh_script_progression "Updating configuration..."

# Create a dedicated PHP-FPM config
ynh_config_add_phpfpm

# Create a dedicated NGINX config
ynh_config_add_nginx

ynh_config_add --template="cron" --destination="/etc/cron.d/$app"
#REMOVEME? Assuming the file is setup using ynh_config_add, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown root: "/etc/cron.d/$app"
#REMOVEME? Assuming the file is setup using ynh_config_add, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod 644 "/etc/cron.d/$app"

#=================================================
# CONFIGURE CASTOPOD
#=================================================
ynh_script_progression "Configuring $app..."

ynh_config_add --template=".env.example" --destination="$install_dir/.env"
#REMOVEME? Assuming the file is setup using ynh_config_add, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod 600 $install_dir/.env
#REMOVEME? Assuming the file is setup using ynh_config_add, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown $app:www-data "$install_dir/.env"

#=================================================
# RUN MIGRATIONS
#=================================================
ynh_script_progression "Configuring $app database..."

pushd $install_dir
  ynh_hide_warnings ynh_exec_as_app php${php_version} spark cache:clear
  ynh_hide_warnings ynh_exec_as_app php${php_version} spark castopod:database-update
popd

if ynh_app_upgrading_from_version_before_or_equal_to 1.6.5~ynh1; then
    # cf https://code.castopod.org/adaures/castopod/-/releases/v1.5.2
    ynh_mysql_db_shell < "../conf/sql/v1.5.2.sql"
fi

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Upgrade of $app completed"
